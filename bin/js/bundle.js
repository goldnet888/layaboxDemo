var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var runtime_1 = require("./runtime/runtime");
var fontTest_1 = require("./fontTest");
var myctrl_1 = require("./myctrl");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("runtime/runtime.ts", runtime_1.default);
        reg("fontTest.ts", fontTest_1.default);
        reg("myctrl.ts", myctrl_1.default);
    };
    GameConfig.width = 1920;
    GameConfig.height = 1080;
    GameConfig.scaleMode = "fixedauto";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "foo.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./fontTest":3,"./myctrl":4,"./runtime/runtime":5}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("./runtime/runtime");
var test = /** @class */ (function (_super) {
    __extends(test, _super);
    // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
    function test() {
        var _this = _super.call(this) || this;
        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        _this.intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        _this.numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        _this.strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        _this.boolType = true;
        return _this;
    }
    test.prototype.onEnable = function () {
        console.log('kk test font');
        Laya.loader.load("res/HanyiSentyVimalkirti.ttf", Laya.Handler.create(this, this.mycode));
        // var text:Text = new Text();
        // text.fontSize=64;
        // text.color="#FF00FF";
        // text.text="test foo ggjjjyyyppp 現在是在測試中";
        // text.font="HanyiSentyVimalkirti"
        // text.pos(600,400);
        // Laya.stage.addChild(text);
    };
    test.prototype.onDisable = function () {
    };
    test.prototype.onUpdate = function () {
    };
    test.prototype.mycode = function () {
        console.log('kk loaded');
        var list = [1, 2, 3];
        var list2 = [];
        // let unused: void = 'test123'
        var someValue = 123549893;
        var strLength = someValue.length;
        var strLength2 = someValue.length;
        runtime_1.default.instance.testLabel.font = "HanyiSentyVimalkirti";
        // mainTestUI.instance.testLabel.color = '#ff0000'
        runtime_1.default.instance.testLabel.text = "Layabox是HTML5引擎技术jjppyy提供商与优秀的游戏发行商，面向AS/JS/TS开发者提供HTML5开发技术方案！\n" +
            "Layabox是HTML5引擎技术提供商与优秀的游戏发行商，面向AS/JS/TS开发者提供HTML5开发技术方案！";
        // mainTestUI.instance.testLabel.leading = 20;
        // mainTestUI.instance.testLabel.overflow = Text.SCROLL;
        // Text.defaultFont = "HanyiSentyVimalkirti"
        // text.fontSize=64;
        // text.color="#FF00FF";
        // text.text="test foo ggjjjyyyppp 現在是在測試中";
        // text.font="HanyiSentyVimalkirti"
        // text.pos(600,400);
        // Laya.stage.addChild(text);
    };
    test.prototype.fail = function () {
        while (true) {
        }
    };
    test.prototype.error = function (message) {
        throw new Error(message);
    };
    return test;
}(Laya.Script));
exports.default = test;
},{"./runtime/runtime":5}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var runtime_1 = require("./runtime/runtime");
var myctrl = /** @class */ (function (_super) {
    __extends(myctrl, _super);
    function myctrl() {
        var _this = _super.call(this) || this;
        _this.longStr = 'fjowejofijoiwjeofij1231jfoijo測試';
        return _this;
    }
    myctrl.prototype.changeEvent = function () {
        console.log(this.displayWidth, this.ownerNode.width, this.ownerNode.height, this.displayHeight);
        if (this.ownerNode.width >= this.displayWidth) {
            this.ownerNode.scale(this.displayWidth / this.ownerNode.width, this.displayWidth / this.ownerNode.width);
            this.ownerNode.y = (this.displayHeight / 2) - (this.displayWidth / this.ownerNode.width) * (this.ownerNode.height / 2);
            console.log(this.ownerNode.y);
        }
        else {
            this.ownerNode.scale(1, 1);
            this.ownerNode.y = 0;
        }
    };
    myctrl.prototype.onLongStrClick = function () {
        this.ownerNode.text = this.longStr;
        console.log('long str', this.ownerNode.text);
    };
    myctrl.prototype.onEnable = function () {
        runtime_1.default.instance.long_btn.on(Laya.Event.CLICK, this, this.onLongStrClick);
        // mainScentUI.instance.short_btn.on(Laya.Event.CLICK, this, this.onShortStrClick);
        if (this.owner instanceof Laya.Text)
            this.ownerNode = this.owner;
        if (this.owner instanceof Laya.Label)
            this.ownerNode = this.owner;
        this.ownerNode.on(laya.events.Event.CHANGE, this, this.changeEvent);
        console.log('test', this.ownerNode.width);
    };
    myctrl.prototype.onDisable = function () {
    };
    myctrl.prototype.onUpdate = function () {
    };
    return myctrl;
}(Laya.Script));
exports.default = myctrl;
},{"./runtime/runtime":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var fooui = /** @class */ (function (_super) {
    __extends(fooui, _super);
    function fooui() {
        var _this = _super.call(this) || this;
        fooui.instance = _this;
        return _this;
    }
    return fooui;
}(layaMaxUI_1.ui.fooUI));
exports.default = fooui;
},{"../ui/layaMaxUI":6}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var fooUI = /** @class */ (function (_super) {
        __extends(fooUI, _super);
        function fooUI() {
            return _super.call(this) || this;
        }
        fooUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.loadScene("foo");
        };
        return fooUI;
    }(Scene));
    ui.fooUI = fooUI;
    REG("ui.fooUI", fooUI);
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
